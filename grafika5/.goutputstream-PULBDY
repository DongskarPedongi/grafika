#include "lib/polygon.h"
#include <iostream>
using namespace std;

FrameBuffer fb;
Polygon* printSumatra(){
    Polygon* pol = new Polygon();
	//Kiri
	pol->addPoint(Point(0, 0));
	pol->addPoint(Point(0, 30));
	pol->addPoint(Point(10, 30));
	pol->addPoint(Point(10, 60));
	pol->addPoint(Point(35, 60));
	pol->addPoint(Point(35, 90));
	pol->addPoint(Point(80, 90));
	pol->addPoint(Point(80, 120));
	pol->addPoint(Point(105, 120));
	pol->addPoint(Point(105, 150));
	pol->addPoint(Point(145, 150));
	pol->addPoint(Point(145, 180));
	pol->addPoint(Point(170, 180));
	pol->addPoint(Point(170, 210));
	pol->addPoint(Point(180, 210));
	pol->addPoint(Point(180, 240));
	pol->addPoint(Point(235, 240));
	pol->addPoint(Point(235, 270));
	pol->addPoint(Point(250, 270));
	pol->addPoint(Point(250, 300));
	pol->addPoint(Point(275, 300));
	pol->addPoint(Point(275, 330));
	pol->addPoint(Point(320, 330));
	pol->addPoint(Point(320, 360));
	pol->addPoint(Point(345, 360));
	pol->addPoint(Point(345, 390));
	pol->addPoint(Point(355, 390));
	pol->addPoint(Point(355, 420));
	pol->addPoint(Point(340, 420));
	pol->addPoint(Point(340, 450));
	pol->addPoint(Point(380, 450));
	pol->addPoint(Point(380, 480));
	pol->addPoint(Point(405, 480));
	pol->addPoint(Point(405, 510));	
	pol->addPoint(Point(450, 510));
	pol->addPoint(Point(450, 540));
	pol->addPoint(Point(475, 540));
	pol->addPoint(Point(475, 570));
	pol->addPoint(Point(520, 570));
	pol->addPoint(Point(520, 600));
	pol->addPoint(Point(545, 600));
	pol->addPoint(Point(545, 630));    
	//Kanan
	pol->addPoint(Point(60, 630));
	pol->addPoint(Point(60, 600));
	pol->addPoint(Point(60, 600));
	pol->addPoint(Point(60, 570));
	pol->addPoint(Point(60, 570));
	pol->addPoint(Point(60, 540));
	pol->addPoint(Point(60, 540));
	pol->addPoint(Point(60, 510));
	pol->addPoint(Point(60, 510));
	pol->addPoint(Point(60, 480));
	pol->addPoint(Point(60, 480));
	pol->addPoint(Point(60, 450));
	pol->addPoint(Point(60, 450));
	pol->addPoint(Point(60, 420));
	pol->addPoint(Point(60, 420));
	pol->addPoint(Point(60, 390));
	pol->addPoint(Point(60, 390));
	pol->addPoint(Point(60, 360));
	pol->addPoint(Point(60, 360));
	pol->addPoint(Point(60, 330));
	pol->addPoint(Point(60, 330));
	pol->addPoint(Point(60, 300));
	pol->addPoint(Point(60, 300));
	pol->addPoint(Point(60, 270));
	pol->addPoint(Point(60, 270));
	pol->addPoint(Point(60, 240));
	pol->addPoint(Point(60, 240));
	pol->addPoint(Point(60, 210));
	pol->addPoint(Point(60, 210));
	pol->addPoint(Point(60, 180));
	pol->addPoint(Point(60, 180));
	pol->addPoint(Point(60, 150));
	pol->addPoint(Point(60, 150));
	pol->addPoint(Point(60, 120));
	pol->addPoint(Point(60, 120));
	pol->addPoint(Point(60, 90));
	pol->addPoint(Point(60, 90));
	pol->addPoint(Point(60, 60));
	pol->addPoint(Point(60, 60));
	pol->addPoint(Point(60, 30));
	pol->addPoint(Point(60, 30));
	pol->addPoint(Point(60, 0));
	return pol;
}

int main() {
  system("clear");
  printSumatra()->print(fb);
  return 0;
}
